{"ast":null,"code":"import { API } from '../../backend';\n\nconst signup = user => {\n  return fetch(`${API}/singup`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  }).then(responce => {\n    return responce.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\n\nconst singin = user => {\n  return fetch(`${API}/singin`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(user)\n  }).then(responce => {\n    return responce.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\n\nconst fogortpass = email => {\n  return fetch(`${API}/forgot_pass`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email\n    })\n  }).then(responce => {\n    return responce.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\n\nconst veifyotp = (email, otp) => {\n  return fetch(`${API}/verify_otp`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      otp\n    })\n  }).then(responce => {\n    return responce.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\n\nconst changepass = (email, newpass, otp) => {\n  return fetch(`${API}/change_pass/${otp}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      email,\n      newpass\n    })\n  }).then(responce => {\n    return responce.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};","map":{"version":3,"sources":["/home/irotech/Desktop/mernProjects/foodViram/frontend/src/auth/helper/auth_helper.js"],"names":["API","signup","user","fetch","method","headers","Accept","body","JSON","stringify","then","responce","json","catch","err","console","log","singin","fogortpass","email","veifyotp","otp","changepass","newpass"],"mappings":"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","sourcesContent":["import {API} from '../../backend'\n\nconst signup = (user)=>{\n    return fetch(`${API}/singup`,{\n        method:\"POST\",\n        headers:{\n            Accept:\"application/json\",\n            \"Content-Type\":\"application/json\"\n        },\n        body:JSON.stringify(user)\n    }).then((responce)=>{\n        return responce.json()\n    }).catch((err)=>{\n        console.log(err);\n    })\n}\n\nconst singin = (user)=>{\n    return fetch(`${API}/singin`,{\n        method:\"POST\",\n        headers:{\n            Accept:\"application/json\",\n            \"Content-Type\":\"application/json\"\n        },\n        body:JSON.stringify(user)\n    }).then((responce)=>{\n        return responce.json()\n    }).catch((err)=>{\n        console.log(err);\n    })\n}\n\nconst fogortpass = (email)=>{\n    return fetch(`${API}/forgot_pass`,{\n        method:\"POST\",\n        headers:{\n            Accept:\"application/json\",\n            \"Content-Type\":\"application/json\"\n        },\n        body:JSON.stringify({email})\n    }).then((responce)=>{\n        return responce.json()\n    }).catch((err)=>{\n        console.log(err);\n    })\n}\n\nconst veifyotp = (email,otp)=>{\n    return fetch(`${API}/verify_otp`,{\n        method:\"POST\",\n        headers:{\n            Accept:\"application/json\",\n            \"Content-Type\":\"application/json\"\n        },\n        body:JSON.stringify({email,otp})\n    }).then((responce)=>{\n        return responce.json()\n    }).catch((err)=>{\n        console.log(err);\n    })\n}\n\nconst changepass=(email,newpass,otp)=>{\n    return fetch(`${API}/change_pass/${otp}`,{\n        method:\"POST\",\n        headers:{\n            Accept:\"application/json\",\n            \"Content-Type\":\"application/json\"\n        },\n        body:JSON.stringify({email,newpass})\n    }).then((responce)=>{\n        return responce.json()\n    }).catch((err)=>{\n        console.log(err);\n    })\n}"]},"metadata":{},"sourceType":"module"}